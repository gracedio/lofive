import { map as mapEither } from 'fp-ts/es6/Either';
import { pipe } from 'fp-ts/es6/pipeable';
import { createElement, createSVGElement, xhtmlNS } from './element';
import { getWindowInfo } from './window-info';
var getBackgroundColor = function ($window, $element) {
    var backgroundColor = $window.getComputedStyle($element).backgroundColor;
    return backgroundColor === 'transparent' ||
        backgroundColor === 'rgba(0, 0, 0, 0)'
        ? 'white'
        : backgroundColor;
};
export var createTree = function (windowInfo) {
    var _a = windowInfo.window, width = _a.innerWidth, height = _a.innerHeight;
    var h = createElement(windowInfo.document);
    var s = createSVGElement(windowInfo.document);
    var $iframe = h('iframe', {
        width: width + 'px',
        height: height + 'px'
    });
    var $svg = s('svg', {
        width: width + 'px',
        height: height + 'px'
    });
    $svg.style.backgroundColor = getBackgroundColor(windowInfo.window, windowInfo.body);
    var $foreignObject = s('foreignObject', {
        x: '0',
        y: '0',
        width: width + 'px',
        height: height + 'px'
    });
    var $newHtml = h('html');
    $newHtml.setAttribute('xmlns', xhtmlNS);
    var $newHead = h('head');
    $newHtml.appendChild($newHead);
    $newHtml.appendChild($newHead);
    $foreignObject.appendChild($newHtml);
    $svg.appendChild($foreignObject);
    $iframe.appendChild($svg);
    return {
        html: $newHtml,
        head: $newHead,
        svg: $svg
    };
};
export var createContainer = function ($window) {
    return pipe(getWindowInfo($window), mapEither(function (parentWindow) { return ({
        parentWindow: parentWindow,
        tree: createTree(parentWindow)
    }); }));
};
