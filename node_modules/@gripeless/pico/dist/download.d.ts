import { FutureInstance } from 'fluture';
import { DetailedError } from './error';
export declare type NetworkError = {
    _tag: 'NetworkError';
    url: string;
};
export declare type HTTPError = {
    _tag: 'HTTPError';
    url: string;
    status: number;
    statusText: string;
};
export declare type DownloadError = NetworkError | HTTPError;
export declare const download: (url: string) => FutureInstance<DownloadError, Response>;
export declare const responseToText: (response: Response) => FutureInstance<DetailedError, string>;
export declare const responseToBlob: (response: Response) => FutureInstance<DetailedError, Blob>;
export declare const blobToDataURL: (blob: Blob) => FutureInstance<DetailedError, string>;
export declare const downloadErrorToDetailedError: (downloadError: DownloadError) => DetailedError;
