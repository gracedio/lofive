var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
export var svgNS = 'http://www.w3.org/2000/svg';
export var xhtmlNS = 'http://www.w3.org/1999/xhtml';
export var createSVGElement = function ($document) { return function (tagName, options) {
    if (options === void 0) { options = {}; }
    var $el = $document.createElementNS(svgNS, tagName);
    Object.entries(options).forEach(function (_a) {
        var _b = __read(_a, 2), key = _b[0], value = _b[1];
        return $el.setAttribute(key, value);
    });
    return $el;
}; };
export var createElement = function ($document) { return function (tagName, properties) {
    if (properties === void 0) { properties = {}; }
    var $el = $document.createElement(tagName);
    Object.assign($el, properties);
    return $el;
}; };
